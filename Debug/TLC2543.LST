C51 COMPILER V9.00   TLC2543                                                               07/27/2016 11:38:29 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE TLC2543
OBJECT MODULE PLACED IN TLC2543.OBJ
COMPILER INVOKED BY: E:\Keil\C51\Bin\C51.exe TLC2543.c DB OE INCDIR(E:\Keil\C51\INC;E:\Keil\C51\INC)

line level    source

   1          #include"stc12c5a.h"
   2          #include"intrins.h"
   3          #include"tlc2543.h"  //ad
   4          #include"main.h"    //主要注释
   5          #include"st7565.c"  //12864
   6          
   7          #include "x9103.c"
   8          
   9          //#include "lcd_drive.c"
  10          //#include "gui.c"
  11          
  12          
  13          unsigned int xdata AD_[4][10] = 0;
  14          double temp[4] = 0;
  15          uint  AD_num[4]=0,e = 0;
  16          uchar aps=0,adtime=0,ad_chunnel = 0,showts = 0;
  17          
  18          
  19          
  20          void delay(uint t)
  21          {
  22   1              while(t--);
  23   1      }
  24          
  25          /*
  26          void InitSPI()
  27          {
  28                  AUXR1 = 0X00;
  29              SPDAT = 0;      //initial SPI data
  30              SPSTAT = SPIF | WCOL;    //SPI状态寄存器
  31              SPCTL = SPEN | MSTR | SPSPEEDH;        //SPI控制寄存器
  32          }
  33          
  34          uchar WriteByte(uchar temp)
  35          {
  36          //      SPCTL = SPEN | MSTR | SPSPEEDH;        //SPI控制寄存器
  37                  SPDAT = temp;
  38              while (!(SPSTAT & SPIF));   //wait send complete
  39              SPSTAT = SPIF | WCOL;       //spi状态寄存器
  40                  delay(20);
  41                  return SPDAT;
  42          }
  43          
  44          */
  45          /*
  46          uint revAD(uchar chunnel)
  47          {
  48                  uint doc = 0 , a = 0, b = 0;
  49                  ad_cs = 0;
  50                  a = WriteByte( (chunnel<<4) | 0x0c );
  51                  b = WriteByte(0);
  52                  ad_cs = 1;
  53                  a <<= 8;
  54                  doc = a | b;
  55                  doc >>= 4;
C51 COMPILER V9.00   TLC2543                                                               07/27/2016 11:38:29 PAGE 2   

  56                  return doc;
  57          }*/
  58          
  59          uint readAD(uchar chunnel)
  60          {
  61   1              uchar i = 0,dout = ad_chunnel_select[chunnel];
  62   1              uint din=0;
  63   1              _nop_();
  64   1              _nop_();
  65   1              _nop_();
  66   1              ad_cs = 0;
  67   1      //      ad_clock = 0;
  68   1      
  69   1              for(i = 0;i < 16;i++)
  70   1              {
  71   2                      ad_clock = 1;
  72   2                      if(dout & 0x80)ad_in = 1;
  73   2                      else ad_in = 0;
  74   2                      dout <<=1;
  75   2                      ad_clock = 0;
  76   2                      _nop_();
  77   2              }
  78   1              for(i=0;i<16;i++)
  79   1              {
  80   2                      
  81   2                      if(ad_out == 1)din |= 0x0001;
  82   2                      ad_clock = 1;
  83   2                      din <<= 1;
  84   2                      ad_clock = 0;
  85   2                      _nop_();
  86   2              }
  87   1              ad_cs = 1;
  88   1              din >>= 4;
  89   1              return (din);
  90   1      }
  91          
  92          
  93          
  94          /*
  95          double KalmanFilter(const double ResrcData,
  96                                                  double ProcessNiose_Q,
  97                                                  double MeasureNoise_R)
  98          {
  99          double R = MeasureNoise_R;
 100          double Q = ProcessNiose_Q;
 101          
 102              static double x_last;
 103          
 104              double x_mid = x_last;
 105              double x_now;
 106          
 107              static double p_last;
 108          
 109              double p_mid ;
 110              double p_now;
 111              double kg;        
 112          
 113              x_mid=x_last; //x_last=x(k-1|k-1),x_mid=x(k|k-1)
 114              p_mid=p_last+Q; //p_mid=p(k|k-1),p_last=p(k-1|k-1),Q=??
 115              kg=p_mid/(p_mid+R); //kg?kalman filter,R???
 116              x_now=x_mid+kg*(ResrcData-x_mid);
 117                      
C51 COMPILER V9.00   TLC2543                                                               07/27/2016 11:38:29 PAGE 3   

 118              p_now=(1-kg)*p_mid;  
 119          
 120              p_last = p_now; 
 121              x_last = x_now; 
 122          
 123              return x_now;
 124          }
 125          */
 126          
 127          
 128          void bubble(unsigned int* array,uchar len)
 129          {
 130   1              uchar i = 0,j = 0;
 131   1              unsigned int tmp;
 132   1              for(i = 0;i < len;i++)
 133   1                  {
 134   2                      for(j=0;j < len;j++)
 135   2                      {
 136   3                          if(array[j] > array[i])
 137   3                          {
 138   4                              tmp = array[j];
 139   4                              array[j] = array[i];
 140   4                              array[i] = tmp;
 141   4                          }
 142   3                      } 
 143   2                  }
 144   1      }
 145          
 146          
 147          double Average(unsigned int *array,unsigned char index,unsigned char len)
 148          {
 149   1        double aver=0,count=index;
 150   1       int i;
 151   1       for(i=index;i<(len-index);i++)
 152   1       {
 153   2         aver+=array[i]; 
 154   2        aver/=(double)(count++==index?1:2); 
 155   2       }
 156   1       return aver;
 157   1      }
 158          
 159          
 160          void ad_show()
 161          {
 162   1                      lcd_putnumstr(0,4,0,AD_num[0]/10000);
 163   1                      Lcd12864_Write16CnCHAR(8,4,0,".");
 164   1                      lcd_putnumstr(16,4,0,AD_num[0]%10000/1000);
 165   1                      lcd_putnumstr(24,4,0,AD_num[0]%10000%1000/100);
 166   1                      lcd_putnumstr(32,4,0,AD_num[0]%10000%1000%100/10);
 167   1                      lcd_putnumstr(40,4,0,AD_num[0]%10000%1000%100%10);
 168   1      
 169   1                                      lcd_putnumstr(80,4,0,AD_num[1]/10000);
 170   1                      Lcd12864_Write16CnCHAR(88,4,0,".");
 171   1                      lcd_putnumstr(96,4,0,AD_num[1]%10000/1000);
 172   1                      lcd_putnumstr(104,4,0,AD_num[1]%10000%1000/100);
 173   1                      lcd_putnumstr(112,4,0,AD_num[1]%10000%1000%100/10);
 174   1                      lcd_putnumstr(120,4,0,AD_num[1]%10000%1000%100%10);
 175   1      
 176   1                                      lcd_putnumstr(0,6,0,AD_num[2]/10000);
 177   1                      Lcd12864_Write16CnCHAR(8,6,0,".");
 178   1                      lcd_putnumstr(16,6,0,AD_num[2]%10000/1000);
 179   1                      lcd_putnumstr(24,6,0,AD_num[2]%10000%1000/100);
C51 COMPILER V9.00   TLC2543                                                               07/27/2016 11:38:29 PAGE 4   

 180   1                      lcd_putnumstr(32,6,0,AD_num[2]%10000%1000%100/10);
 181   1                      lcd_putnumstr(40,6,0,AD_num[2]%10000%1000%100%10);
 182   1      
 183   1                                      lcd_putnumstr(80,6,0,AD_num[3]/10000);
 184   1                      Lcd12864_Write16CnCHAR(88,6,0,".");
 185   1                      lcd_putnumstr(96,6,0,AD_num[3]%10000/1000);
 186   1                      lcd_putnumstr(104,6,0,AD_num[3]%10000%1000/100);
 187   1                      lcd_putnumstr(112,6,0,AD_num[3]%10000%1000%100/10);
 188   1                      lcd_putnumstr(120,6,0,AD_num[3]%10000%1000%100%10);
 189   1      
 190   1      }
 191          
 192          uchar x9c = 0;
 193          
 194          
 195          uint xpd(double value)
 196          {
 197   1              static const Vcc = 5.15 , R1 = 524;
 198   1              double tmp = (Vcc - value)/R1;
 199   1              double R2 = value / tmp;
 200   1              return ((R2 + 50)/10);
 201   1      }
 202          
 203          
 204          void zd1() interrupt 1
 205          {
 206   1              unsigned char i=0;
 207   1              TH0 = (65536-250)/256;
 208   1              TL0 = (65536-250)%256;
 209   1              e++;
 210   1              adtime++;
 211   1              if(adtime == 10)//2.5ms 采样一次  分别四路
 212   1              {
 213   2                      adtime = 0;
 214   2                      AD_[ad_chunnel][aps] = readAD(ad_chunnel);
 215   2                      ad_chunnel++;
 216   2              }
 217   1              if(ad_chunnel == 4){ad_chunnel = 0;aps++;}
 218   1      
 219   1              if(aps == 10) //100ms 计算一次
 220   1              {
 221   2                      aps = 0;
 222   2                      for(i = 0;i < 4;i++) 
 223   2                      {
 224   3                              bubble(AD_[i],10);            //冒泡
 225   3                              temp[i]  = Average(AD_[i],1,9); //平均值
 226   3                              temp[i] = (temp[i] * addTcl2543) *10000;                
 227   3                      }
 228   2              }
 229   1              if(e == 1000) //1s 输出一次
 230   1              {
 231   2                      e = 0;
 232   2                      AD_num[showts] = temp[showts];
 233   2                      showts++;
 234   2                      if(showts == 4)showts=0;
 235   2              
 236   2              }
 237   1              
 238   1      }
 239          
 240          void main(void)
 241          {
C51 COMPILER V9.00   TLC2543                                                               07/27/2016 11:38:29 PAGE 5   

 242   1      
 243   1              TMOD = 0x01;
 244   1              TH0 = (65536-250)/256;
 245   1              TL0 = (65536-250)%256;
 246   1              ET0 = 1;
 247   1              TR0 = 1;
 248   1              EA = 1;
 249   1              
 250   1              x9cInit();  //
 251   1              x9c10Run(1,60);
 252   1      //      x9c10Run(0,90);
 253   1              Lcd12864_Init();
 254   1              Lcd12864_ClearScreen(0x00);//清屏
 255   1              Lcd12864_Write16CnCHAR(0,0,0,"Welcome to ");
 256   1              Lcd12864_Write16CnCHAR(0,2,0," using the AD/C. ");
 257   1              
 258   1      //      x9c10Run(1,70);
 259   1              while(1)
 260   1              {
 261   2              //      x9c10Run(0,xpd(0.5));
 262   2                      ad_show();
 263   2              }
 264   1      }


MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   3306    ----
   CONSTANT SIZE    =   1712    ----
   XDATA SIZE       =     80    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =     37      63
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)

C51 COMPILER V9.00   LCD_DRIVE                                                             07/25/2016 13:43:00 PAGE 1   


C51 COMPILER V9.00, COMPILATION OF MODULE LCD_DRIVE
OBJECT MODULE PLACED IN lcd_drive.OBJ
COMPILER INVOKED BY: E:\Keil\C51\Bin\C51.exe lcd_drive.c DB OE INCDIR(E:\Keil\C51\INC;E:\Keil\C51\INC)

line level    source

   1          #include "lcd_drive.h"
   2          
   3          /****************************************************************************
   4          *函数名：TFT_WriteCmd
   5          *输  入：cmd：命令
   6          *输  出：
   7          *功  能：写命令。
   8          ****************************************************************************/     
   9          
  10          void TFT_WriteCmd(uint cmd)
  11          {
  12   1              uchar cmdH, cmdL;
  13   1              cmdH = cmd >> 8;
  14   1              cmdL = cmd & 0x00FF;
  15   1              
  16   1              
  17   1              TFT_WR = 1;                       //初始化WR
  18   1              TFT_CS = 0;                       //打开片选
  19   1              
  20   1              TFT_RD = 1;           //选择写
  21   1              TFT_RS = 0;                       //选择命令
  22   1              
  23   1              
  24   1              TFT_DATAPORT = cmdH; //放置命令数据
  25   1              TFT_WR = 0;                       //写入时序
  26   1              TFT_WR = 1;
  27   1              TFT_DATAPORT = cmdL;
  28   1      
  29   1              TFT_WR = 0;                       //写入时序
  30   1              TFT_WR = 1;
  31   1      
  32   1              TFT_CS = 1;                       //关闭片选    
  33   1      }
  34          
  35          /****************************************************************************
  36          *函数名：TFT_WriteData
  37          *输  入： dat：数据
  38          *输  出：
  39          *功  能: 写数据。
  40          ****************************************************************************/     
  41          
  42          void TFT_WriteData(uint dat)
  43          {
  44   1              uchar datH, datL;
  45   1              datH = dat >> 8;
  46   1              datL = dat & 0xFF;
  47   1              
  48   1              TFT_WR = 1;                       //初始化WR
  49   1              TFT_CS = 0;                       //打开片选
  50   1                      
  51   1              TFT_RD = 1;           //选择写
  52   1              TFT_RS = 1;                       //选择发送数据
  53   1              
  54   1      
  55   1              TFT_DATAPORT = datH;  //放置命令数据
C51 COMPILER V9.00   LCD_DRIVE                                                             07/25/2016 13:43:00 PAGE 2   

  56   1              TFT_WR = 0;                       //写入时序
  57   1              TFT_WR = 1;
  58   1              TFT_DATAPORT = datL;    
  59   1      
  60   1              TFT_WR = 0;                       //写入时序
  61   1              TFT_WR = 1;
  62   1              
  63   1              TFT_CS = 1;                       //关闭片选
  64   1      }
  65          
  66          
  67          
  68          /****************************************************************************
  69          *函数名：TFT_WriteCmdData
  70          *输  入：cmd：命令
  71          *      ：dat：数据
  72          *输  出：
  73          *功  能：写命令， 写数据。
  74          ****************************************************************************/     
  75          //
  76          //void TFT_WriteCmdData(uint cmd, uint dat)
  77          //{
  78          //      TFT_WriteCmd(cmd);
  79          //      TFT_WriteData(dat);
  80          //}
  81          /****************************************************************************
  82          *函数名：TFT_Init
  83          *输  入：
  84          *输  出：
  85          *功  能：初始化TFT。
  86          ****************************************************************************/     
  87          
  88          void TFT_Init(void)
  89          {
  90   1              uint i;
  91   1      
  92   1              TFT_RST = 1;
  93   1              for(i=500; i>0; i--);
  94   1              TFT_RST = 0;
  95   1              for(i=500; i>0; i--);
  96   1              TFT_RST = 1;
  97   1              for(i=5000; i>0; i--);
  98   1              
  99   1              //TFT_CS = 0;
 100   1              
 101   1      //************* Start Initial Sequence **********//
 102   1      
 103   1              WriteComm(0xB0);
 104   1              WriteData(0x3F);
 105   1              WriteData(0x3F);
 106   1              for(i=500; i>0; i--);
 107   1      
 108   1              WriteComm(0xB3);
 109   1              WriteData(0x02);
 110   1              WriteData(0x00);
 111   1              WriteData(0x00);
 112   1              WriteData(0x00);
 113   1              WriteData(0x00);
 114   1      
 115   1              WriteComm(0xB4);
 116   1              WriteData(0x00);
 117   1      
C51 COMPILER V9.00   LCD_DRIVE                                                             07/25/2016 13:43:00 PAGE 3   

 118   1              WriteComm( 0xC0 );
 119   1              WriteData( 0x33);       //03
 120   1              WriteData( 0x4F);
 121   1              WriteData( 0x00);
 122   1              WriteData( 0x10);
 123   1              WriteData( 0xA2);
 124   1              WriteData( 0x00);
 125   1              WriteData( 0x01);
 126   1              WriteData( 0x00);
 127   1      
 128   1              WriteComm( 0xC1 );
 129   1              WriteData( 0x01);
 130   1              WriteData( 0x02);
 131   1              WriteData( 0x20);
 132   1              WriteData( 0x08);
 133   1              WriteData( 0x08);
 134   1              for(i=5000; i>0; i--);
 135   1      
 136   1              WriteComm( 0xC3 );
 137   1              WriteData(0x01);
 138   1              WriteData(0x00);
 139   1              WriteData(0x28);
 140   1              WriteData(0x08);
 141   1              WriteData(0x08);
 142   1              for(i=500; i>0; i--);
 143   1      
 144   1              WriteComm(0xC4);
 145   1              WriteData(0x11 );
 146   1              WriteData(0x01);
 147   1              WriteData(0x23);
 148   1              WriteData(0x04);
 149   1              WriteData(0x00);
 150   1      
 151   1              WriteComm(0xC8);//Gamma
 152   1              WriteData(0x05);
 153   1              WriteData(0x0C);
 154   1              WriteData(0x0b);
 155   1              WriteData(0x15);
 156   1              WriteData(0x11);
 157   1              WriteData(0x09);
 158   1              WriteData(0x05);
 159   1              WriteData(0x07);
 160   1              WriteData(0x13);
 161   1              WriteData(0x10);
 162   1              WriteData(0x20);
 163   1      
 164   1              WriteData(0x13);
 165   1              WriteData(0x07);
 166   1              WriteData(0x05);
 167   1              WriteData(0x09);
 168   1              WriteData(0x11);
 169   1              WriteData(0x15);
 170   1              WriteData(0x0b);
 171   1              WriteData(0x0c);
 172   1              WriteData(0x05);
 173   1              WriteData(0x05);
 174   1              WriteData(0x02);
 175   1      
 176   1              
 177   1              WriteComm(0xC9);//Gamma
 178   1              WriteData(0x05);
 179   1              WriteData(0x0C);
C51 COMPILER V9.00   LCD_DRIVE                                                             07/25/2016 13:43:00 PAGE 4   

 180   1              WriteData(0x05);
 181   1              WriteData(0x15);
 182   1              WriteData(0x11 );
 183   1              WriteData(0x09);
 184   1              WriteData(0x05);
 185   1              WriteData(0x07);
 186   1              WriteData(0x13);
 187   1              WriteData(0x10);
 188   1              WriteData(0x20);
 189   1              WriteData(0x13);
 190   1              WriteData(0x07);
 191   1              WriteData(0x05);
 192   1              WriteData(0x09);
 193   1              WriteData(0x11);
 194   1              WriteData(0x15);
 195   1              WriteData(0x0b);
 196   1              WriteData(0x0c);
 197   1              WriteData(0x05);
 198   1              WriteData(0x05);
 199   1              WriteData(0x02);
 200   1      
 201   1              WriteComm(0xCA);//Gamma
 202   1              WriteData(0x05);
 203   1              WriteData(0x0C);
 204   1              WriteData(0x0b);
 205   1              WriteData(0x15);
 206   1              WriteData(0x11);
 207   1              WriteData(0x09);
 208   1              WriteData(0x05);
 209   1              WriteData(0x07);
 210   1              WriteData(0x13);
 211   1              WriteData(0x10);
 212   1              WriteData(0x20);
 213   1              WriteData(0x13);
 214   1              WriteData(0x07);
 215   1              WriteData(0x05);
 216   1              WriteData(0x09);
 217   1              WriteData(0x11);
 218   1              WriteData(0x15);
 219   1              WriteData(0x0b);
 220   1              WriteData(0x0c);
 221   1              WriteData(0x05);
 222   1              WriteData(0x05);
 223   1              WriteData(0x02);
 224   1      
 225   1              WriteComm(0xD0);
 226   1              WriteData(0x33);
 227   1              WriteData(0x53);
 228   1              WriteData(0x87);
 229   1              WriteData(0x3b);
 230   1              WriteData(0x30);
 231   1              WriteData(0x00);
 232   1      
 233   1              WriteComm(0xD1 );
 234   1              WriteData(0x2c);
 235   1              WriteData(0x61);
 236   1              WriteData(0x10);
 237   1      
 238   1              WriteComm(0xD2 );
 239   1              WriteData(0x03);
 240   1              WriteData(0x24);
 241   1      
C51 COMPILER V9.00   LCD_DRIVE                                                             07/25/2016 13:43:00 PAGE 5   

 242   1              WriteComm(0xD4 );
 243   1              WriteData(0x03);
 244   1              WriteData(0x24);
 245   1      
 246   1      
 247   1              WriteComm(0xE2);
 248   1              WriteData(0x3f);
 249   1              for(i=500; i>0; i--);
 250   1      
 251   1              TFT_WriteCmd(0x35 );
 252   1              WriteData(0x00);
 253   1      
 254   1              WriteComm(0x36 );
 255   1              WriteData(0x40);  //0000
 256   1      
 257   1              WriteComm(0x3A );
 258   1              WriteData(0x55);//55 16bit color
 259   1      
 260   1              WriteComm(0x2A );
 261   1              WriteData(0x00);
 262   1              WriteData(0x00);
 263   1              WriteData(0x00);
 264   1              WriteData(0xEF);
 265   1      
 266   1              WriteComm(0x2B );
 267   1              WriteData(0x00);
 268   1              WriteData(0x00);
 269   1              WriteData(0x01);
 270   1              WriteData(0x3F);
 271   1      
 272   1              WriteComm(0x11) ;
 273   1              for(i=500; i>0; i--);
 274   1              TFT_WriteCmd(0x29);
 275   1              for(i=500; i>0; i--);
 276   1              TFT_WriteCmd(0x2C) ;
 277   1              for(i=500; i>0; i--);
 278   1      }
 279          
 280          
 281          void WriteData(uint i)
 282          {
 283   1              TFT_WR = 1;                       //初始化WR
 284   1              TFT_CS = 0;                       //打开片选
 285   1              
 286   1              TFT_RD = 1;           //选择写
 287   1              TFT_RS = 1;                       //选择发送数据
 288   1              
 289   1              TFT_DATAPORT = i;
 290   1       
 291   1              TFT_WR = 0;                       //写入时序
 292   1              TFT_WR = 1;
 293   1              
 294   1              TFT_CS = 1;                       //关闭片选    
 295   1      }
 296          
 297          void WriteComm(uint i)
 298          {
 299   1              TFT_WR = 1;                       //初始化WR
 300   1              TFT_CS = 0;                       //打开片选
 301   1              
 302   1              TFT_RD = 1;           //选择写
 303   1              TFT_RS = 0;                       //选择发送数据
C51 COMPILER V9.00   LCD_DRIVE                                                             07/25/2016 13:43:00 PAGE 6   

 304   1              
 305   1              TFT_DATAPORT = i;
 306   1       
 307   1              TFT_WR = 0;                       //写入时序
 308   1              TFT_WR = 1;
 309   1              
 310   1              TFT_CS = 1;                       //关闭片选    
 311   1      }
 312          
 313          /****************************************************************************
 314          *函数名：TFT_SetWindow
 315          *输  入：xStart：起始X坐标
 316          *      ：yStart：起始Y坐标 
 317          *      ：xEnd：结束X坐标
 318          *      ：yEnd：结束Y坐标
 319          *输  出：
 320          *功  能：设置要操作的窗口。
 321          ****************************************************************************/     
 322          
 323          void TFT_SetWindow(uint xStart, uint yStart, uint xEnd, uint yEnd)
 324          {                                       
 325   1              WriteComm(0x2A);
 326   1              TFT_WriteData(xStart);
 327   1              TFT_WriteData(xEnd);
 328   1      //      WriteData(xStart>>8);
 329   1      //      WriteData(xStart&0xff);
 330   1      //      WriteData(xEnd>>8);
 331   1      //      WriteData(xEnd&0xff);
 332   1         
 333   1          WriteComm(0x2b);
 334   1              TFT_WriteData(yStart);
 335   1              TFT_WriteData(yEnd);
 336   1      //      WriteData(yStart>>8);
 337   1      //      WriteData(yStart&0xff);
 338   1      //      WriteData(yEnd>>8);
 339   1      //      WriteData(yEnd&0xff);
 340   1         
 341   1          TFT_WriteCmd(0x2c); 
 342   1      }
 343          
 344          void TFT_WriteColorData(uint color)
 345          {
 346   1              uint red = 0, blue = 0, green = 0;
 347   1              uint RGB[1];
 348   1              //--蓝色处理--//
 349   1              red = (color & 0x1F);    //取5位蓝色
 350   1      
 351   1              //--绿色处理--//
 352   1              green = (color >> 5) & 0x3F; //取6位绿色
 353   1              
 354   1              //--红色处理--//
 355   1              blue = (color >> 11) & 0x1F;  //取5位红色
 356   1      
 357   1              RGB[0] = ((red << 11) | (green << 6) | blue);
 358   1              
 359   1      
 360   1              TFT_CS = 0;
 361   1              TFT_RS = 1;
 362   1              TFT_RD = 1;
 363   1      
 364   1              TFT_DATAPORT = RGB[0] >>8;
 365   1              TFT_WR = 0;                       //写入时序
C51 COMPILER V9.00   LCD_DRIVE                                                             07/25/2016 13:43:00 PAGE 7   

 366   1              TFT_WR = 1;
 367   1              TFT_DATAPORT = RGB[0];
 368   1              TFT_WR = 0;                       //写入时序
 369   1              TFT_WR = 1;
 370   1      
 371   1              TFT_CS = 1;
 372   1      }
 373          
 374          void TFT_Changegrb(uint color,uint *p)
 375          {
 376   1              uint red = 0, blue = 0, green = 0;
 377   1      
 378   1              //--蓝色处理--//
 379   1              red = (color & 0x1F);    //取5位蓝色
 380   1      
 381   1              //--绿色处理--//
 382   1              green = (color >> 5) & 0x3F; //取6位绿色
 383   1              
 384   1              //--红色处理--//
 385   1              blue = (color >> 11) & 0x1F;  //取5位红色
 386   1      
 387   1              *p = ((red << 11) | (green << 6) | blue);
 388   1      
 389   1      }
 390          
 391          /****************************************************************************
 392          *函数名：GUI_Clearcreen
 393          *输  入：backColor：清屏颜色
 394          *输  出：
 395          *功  能：清屏并涂上颜色。
 396          ****************************************************************************/
 397                    
 398          void TFT_ClearScreen(uint color)
 399          {
 400   1              uint i, j;
 401   1              uint grb[2];
 402   1              TFT_Changegrb(color,grb);
 403   1      
 404   1              TFT_SetWindow(0, 0, TFT_XMAX, TFT_YMAX);         //作用区域
 405   1              TFT_CS = 0;
 406   1              TFT_RS = 1;
 407   1              TFT_RD = 1;
 408   1      
 409   1              for(i=0; i <  TFT_YMAX+1 ; i++)
 410   1              {
 411   2                      for (j=0; j <  TFT_XMAX+1; j++)
 412   2                      {
 413   3                         //TFT_WriteColorData(color);
 414   3                          TFT_DATAPORT =grb[0]>>8;
 415   3                              TFT_WR = 0;                       //写入时序
 416   3                              TFT_WR = 1;
 417   3                              TFT_DATAPORT =grb[0];
 418   3                              TFT_WR = 0;                       //写入时序
 419   3                              TFT_WR = 1;
 420   3      
 421   3                      }
 422   2              }
 423   1              TFT_CS = 1;
 424   1      }
 425          


C51 COMPILER V9.00   LCD_DRIVE                                                             07/25/2016 13:43:00 PAGE 8   

MODULE INFORMATION:   STATIC OVERLAYABLE
   CODE SIZE        =   1517    ----
   CONSTANT SIZE    =   ----    ----
   XDATA SIZE       =   ----    ----
   PDATA SIZE       =   ----    ----
   DATA SIZE        =   ----      21
   IDATA SIZE       =   ----    ----
   BIT SIZE         =   ----    ----
END OF MODULE INFORMATION.


C51 COMPILATION COMPLETE.  0 WARNING(S),  0 ERROR(S)
